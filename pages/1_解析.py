# -*- coding: utf-8 -*-
# pages/2_バイアス解析.py
import streamlit as st
import random
import datetime
from logic_simple import analyze_selection, render_finding_card

 
# =========================
# ページ固有のキー（衝突防止）
# =========================
KEY_PREFIX = "p2_"
def k(name: str) -> str:
    return KEY_PREFIX + name

# =========================
# モバイル最適CSS（読みやすい文字）
# =========================
st.markdown("""
<style>
.block-container{max-width:720px;margin:auto;}
h1{font-size:1.6rem !important;margin:1.8rem 0 1rem 0;}   /* ←タイトルを少し大きく */
h2, .stSubheader{font-size:1.1rem !important;}            /* ←サブ見出しを少し小さく */
p, .stMarkdown{font-size:.95rem;line-height:1.6;}         
.small{color:#667085;font-size:.88rem;}
.stButton>button{font-size:.95rem;padding:.35rem 1rem;}
@media(max-width:480px){
    h1{font-size:1.4rem !important;}   /* モバイルでは少し抑える */
    h2, .stSubheader{font-size:1.0rem !important;}
    p, .stMarkdown{font-size:.92rem;}
}
</style>
""", unsafe_allow_html=True)


# =========================
# ヘッダー
# =========================
st.markdown("# 🧠 バイアス解析（かんたん版）")
st.caption("「“思考のバグ”を見つけて、脳の使い方をアップデート")

# =========================
# 3段階 かんたん入力
# =========================
st.subheader("1) かんたん入力（3ステップ）")

# STEP1: テーマ（シーン）
THEMES = ["お金", "学び", "人間関係", "買い物", "仕事・バイト"]
theme = st.radio("A. どのテーマ？", THEMES, key=k("theme"))

# STEP2: 状況（目的）
SITUATIONS = {
    "お金": ["貯金したい", "出費を減らしたい", "投資が気になる"],
    "学び": ["勉強が続かない", "資格を取りたい", "部活・勉強の両立"],
    "人間関係": ["LINEの既読が気になる", "断れなくて困る", "友だちに意見が言えない"],
    "買い物": ["高い物を買うか迷う", "セールで衝動買い", "サブスクの継続"],
    "仕事・バイト": ["シフトを増やすか迷う", "新しいことに挑戦", "上手く頼れない"],
}
situation = st.selectbox("B. 具体的な状況は？", SITUATIONS[theme], key=k("situation"))

# STEP3: 心のサイン
SIGNS = ["時間がない気がする", "損するのが怖い", "みんながやってるから", "なんとなく不安", "面倒で先のばし"]
sign = st.selectbox("C. 今の気持ちに近いものは？", SIGNS, key=k("sign"))

st.markdown('<span class="small">ヒント：A→B→Cを選ぶと“今の自分の思考のクセ”が浮きやすくなります。</span>', unsafe_allow_html=True)

# 文章（任意。なくてもOK）
st.subheader("2) 一言メモ（任意）")
user_text = st.text_area("今の気持ちや状況を1〜3行で。空でもOK。", key=k("memo"), placeholder="例）セールで安いと聞くと買わなきゃ損な気がして焦る。")

# =================
# 解析ボタン
# =================
if st.button("解析する", type="primary", key=k("analyze_btn")):
    # 簡単解析ロジックを呼ぶ
    findings = analyze_selection(theme, situation, sign, user_text)

    # 結果をセッションに保存（None防止）
    st.session_state[k("findings")] = findings or []

    st.success("解析しました。下の結果をご確認ください。")


# =========================
# 解析結果の表示
# =========================
st.subheader("3) 解析結果")
findings = st.session_state.get(k("findings"), None)

if findings is None:
    st.caption("（まだ解析していません）")
elif len(findings) == 0:
    st.success("今回は偏りは見つかりませんでした。落ち着いて考えられています。")
    st.info("友だちに“どう考えたか”を説明してみると、さらに判断が強くなります。")
else:
    st.caption("※ “確からしさ”はA/B/Cの3段階（A:高い｜B:中くらい｜C:低め）")
    for f in findings:
        render_finding_card(f)

# =========================
# 友だちに話したくなる小ネタ（1つだけ表示）
# =========================


# 日替わりで変わるようにシード設定（同じ日は固定）
random.seed(datetime.date.today().isoformat())

TIPS = [
    {"title": "フレーミング効果",
     "desc": "同じ内容でも言い方で印象が変わる現象。ポジティブ表現は良く、ネガティブ表現は悪く見えやすい。数値や事実は同じでも判断は揺れます。",
     "examples": ["「成功率90%」と言われると挑戦したくなる", "「失敗率10%」だと同じ内容でも避けがち"]},

    {"title": "アンカリング",
     "desc": "最初に見た数字が心の基準（アンカー）になり、その後の判断に強く影響する。根拠が弱い数字でも無意識に引きずられます。",
     "examples": ["最初に提示された定価が高く、値引き後が安く感じる", "最初の見積もりを基準に、追加費用を妥当に感じる"]},

    {"title": "現状維持バイアス",
     "desc": "変えることの不安や手間を過大に見積もり、今の状態を選びやすい傾向。変化そのものを“損”と感じ、判断を先延ばしにします。",
     "examples": ["料金プランを見直さず、長年そのまま", "不満があっても仕事や環境を変えない"]},

    {"title": "ハロー効果",
     "desc": "目立つ長所・短所が全体評価に広がる現象。見た目や肩書の印象が、中身の評価にまで影響してしまう“思い込みの連鎖”です。",
     "examples": ["有名企業出身というだけで優秀だと思う", "服装が整っている人を有能と感じる"]},

    {"title": "確証バイアス",
     "desc": "自分の信じたい結論に合う情報だけを集め、反対の証拠を軽視する傾向。検索の仕方や人の意見の聞き方にも表れます。",
     "examples": ["推しの良い評判だけを追う", "自分の考えに反する記事をすぐ閉じる"]},

    {"title": "損失回避バイアス",
     "desc": "同じ額でも得より損を強く感じる心理。損を避けたい気持ちが、必要以上に保守的な選択や“手放せない”状態を生みます。",
     "examples": ["含み損の株を売れない", "返品無料でも失った気がして返せない"]},

    {"title": "代表性ヒューリスティック",
     "desc": "少ない事例や“それっぽさ”で全体を判断してしまう近道思考。統計や母数を無視し、印象的な事例に引っ張られます。",
     "examples": ["口コミ数より印象的な1件に左右される", "典型的なイメージに合う人を職業で決めつける"]},

    {"title": "選択のパラドックス",
     "desc": "選択肢が多いほど良さそうに見えて、実際は迷いと後悔が増える現象。決める負荷が高まり満足感も下がりやすくなります。",
     "examples": ["サブスクのプランが多すぎて決められない", "買った後に他の選択肢を見て後悔"]},

    {"title": "計画錯誤",
     "desc": "作業時間やコストを楽観的に見積もる傾向。過去の経験を十分に反映できず、“今回はうまく行く”と思いがちです。",
     "examples": ["課題を前日で終わると見積もる", "引っ越し準備が想定より大幅に遅れる"]},

    {"title": "社会的証明",
     "desc": "多くの人がしていることを正しいと感じる心理。他者の行動が“安全・妥当”のサインとなり、判断を省力化します。",
     "examples": ["行列のある店に安心して入る", "再生数が多い動画をまず見る"]},

    {"title": "保有効果",
     "desc": "自分が持っているだけで価値を高く見積もる傾向。手放す痛みが増幅され、“同じものでも所有後は高く感じる”現象です。",
     "examples": ["使わないのにフリマで高額出品にしがち", "景品でも捨てづらい"]},

    {"title": "サンクコスト効果",
     "desc": "回収不能のコストに縛られてやめられなくなる現象。“もったいない”が判断を曇らせ、合理的な撤退を遅らせます。",
     "examples": ["つまらない映画を最後まで見る", "合わない習い事を会費が惜しくて続ける"]},

    {"title": "プロスペクト理論",
     "desc": "人は利益ではリスク回避、損失ではリスク選好になりやすいという法則。損を取り返そうとして無理を重ねてしまいます。",
     "examples": ["負けを取り返そうとベット額を上げる", "値上がり益はすぐ確定しがち"]},

    {"title": "楽観バイアス",
     "desc": "自分だけは大丈夫と見積もりがち。リスク管理や備えが後回しになり、いざという時のダメージが大きくなります。",
     "examples": ["災害の備蓄を先延ばし", "締切直前でも間に合うと考える"]},

    {"title": "権威バイアス",
     "desc": "専門家や有名人の意見だと、根拠を精査せず信じやすい心理。肩書や立場が“質の保証”に見えてしまいます。",
     "examples": ["有名人のおすすめを無条件に買う", "肩書だけで発言の正しさを判断する"]},

    {"title": "同調圧力",
     "desc": "周囲との摩擦を避けるために、内心と違う選択をしてしまう力。少数意見の価値が埋もれ、学びの機会を減らします。",
     "examples": ["会議で本音を言わず多数に合わせる", "友人の流行に無理に乗る"]},

    {"title": "利用可能性ヒューリスティック",
     "desc": "思い出しやすい出来事を“頻繁”だと錯覚する近道思考。強い印象や最近見た情報に判断が大きく引っ張られます。",
     "examples": ["ニュース直後に同事故の確率を過大評価", "身近な体験だけで商品を選ぶ"]},

    {"title": "感情ヒューリスティック",
     "desc": "怖さ・不安・好意といった感情が、そのまま判断に混入する現象。考える前に“感じ”で結論が出てしまいます。",
     "examples": ["不安で長期的に損な保険を契約", "好感度で候補を早々に絞る"]},

    {"title": "ゴール・グラデーション効果",
     "desc": "目標に近づくほどやる気が増す現象。進捗が可視化されると、最後のひと押しが強くなり完了率が上がります。",
     "examples": ["ポイントカードが埋まると急に通う", "残りタスク数が減ると加速する"]},

    {"title": "ナッジ効果",
     "desc": "選択肢の並びや初期設定など“そっと背中を押す”工夫で行動が変わる。禁止せず自由を残したまま意思決定を助けます。",
     "examples": ["健康的な食品を取りやすい位置へ配置", "自動積立をデフォルトにする"]},

    {"title": "リバウンド効果",
     "desc": "強い我慢や急な制限は反動を招きやすい。短期の成功に満足し、かえって以前より戻ってしまうことがあります。",
     "examples": ["厳しすぎるダイエット後にドカ食い", "節約の反動で高額の衝動買い"]},

    {"title": "ゼイガルニク効果",
     "desc": "未完了のタスクは記憶に残りやすい現象。敢えて“未完の状態”を作ると、次に取りかかるエネルギーが高まります。",
     "examples": ["勉強を中途の章で止め翌日スッと再開", "書きかけの下書きで作業を再起動しやすい"]},

    {"title": "後知恵バイアス",
     "desc": "結果を知った後で“最初から分かっていた”と感じる錯覚。過去の判断を過度に批判し、学び方を誤らせます。",
     "examples": ["株価下落後に『予想してた』と言う", "試合結果を見て戦術を簡単に評価する"]},

    {"title": "所有効果",
     "desc": "自分が所有すると同じ物でも価値が上がって見える現象。売値と買値のギャップが広がり、手放しづらくなります。",
     "examples": ["自作PCを相場より高く見積もる", "グッズを手放せない"]},

    {"title": "過信バイアス",
     "desc": "自分の能力や予測の正確さを過大評価する傾向。リスクを軽視し、根拠の薄い挑戦で失敗確率を高めます。",
     "examples": ["相場の天井底を当てられると思う", "準備不足でもプレゼンは通ると信じる"]},

    {"title": "小数の法則",
     "desc": "少数のサンプルから全体を安易に推測してしまう誤り。偶然の偏りを“傾向”だと勘違いしがちです。",
     "examples": ["レビュー数3件で品質を断定", "短期間のデータで長期の結論を出す"]},

    {"title": "自己奉仕バイアス",
     "desc": "成功は実力、失敗は外部要因と解釈しやすい傾向。省察の質が落ち、成長のチャンスを逃してしまいます。",
     "examples": ["合格は実力、不合格は運のせい", "売上減を景気だけのせいにする"]},

    {"title": "時間割引",
     "desc": "将来より今の利益を過大評価する心理。長期的に得でも、目先の快楽や手間の少なさに流されやすくなります。",
     "examples": ["積立より今の消費を優先", "徹夜してでも直近の娯楽を選ぶ"]},

    {"title": "正常性バイアス",
     "desc": "都合の悪い情報を過小評価し、日常通りだと見なす心理。リスク対応が遅れ、被害が拡大する恐れがあります。",
     "examples": ["避難勧告でも様子見を続ける", "異常値を計測ミスだと片付ける"]},

    {"title": "ダニング＝クルーガー効果",
     "desc": "知識が浅いほど自信が高く、一定以上で自信が下がる現象。学び始めの“分かった気”に要注意です。",
     "examples": ["勉強初期に専門家のように語る", "少しできるようになり自己評価が急上昇"]},
]




# バージョンが変わったらセッションを掃除
if st.session_state.get("tips_version") != VERSION:
    for k in ("tips_seen", "tips_clicks"):
        st.session_state.pop(k, None)
    try:
        st.cache_data.clear()
        st.cache_resource.clear()
    except Exception:
        pass
    st.session_state["tips_version"] = VERSION
    st.rerun()

# セッション最小限のキー（プールは持たない）
if "tips_seen" not in st.session_state:
    st.session_state["tips_seen"] = set()
if "tips_clicks" not in st.session_state:
    st.session_state["tips_clicks"] = 0

def pick_next_tip() -> dict:
    """未表示のものから 1 件。尽きたら自動リセット。"""
    n = len(TIPS)
    remaining = [i for i in range(n) if i not in st.session_state["tips_seen"]]
    if not remaining:
        st.session_state["tips_seen"] = set()
        remaining = list(range(n))
    # “今日 + クリック回数” を種にして毎回変わるが日内は再現性あり
    seed = f"{datetime.date.today().isoformat()}-{st.session_state['tips_clicks']}"
    rng = random.Random(seed)
    idx = rng.choice(remaining)
    st.session_state["tips_seen"].add(idx)
    return TIPS[idx]

with st.expander("おまけ：今日の豆知識", expanded=True):
    tip = pick_next_tip()
    body = f"**{tip['title']}**：{tip['desc']}\n\n**例)**\n- {tip['examples'][0]}\n- {tip['examples'][1]}"
    st.markdown(body)
    if st.button("別の豆知識も見る", key="see_another_tip"):
        st.session_state["tips_clicks"] += 1
        st.rerun()

# 変更バージョン（手で上げる）—— 画面にも出す
VERSION = "tips-2025-10-19-02"
st.caption(f"豆知識データ：{VERSION}")

